{"version":3,"sources":["components/hocs/PrivateRoute.js","components/hocs/PublicRoute.js","helpers/notify.js","services/firebase.js","helpers/auth.js","pages/AuthScreen.js","components/Upload.js","components/TaxPayple.js","components/TaxPayple2.js","pages/Dashboard.js","components/hocs/routes.js","App.js","serviceWorker.js","index.js"],"names":["PrivateRoute","Component","component","authenticated","rest","render","props","to","pathname","state","from","location","PublicRoute","notification","config","placement","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","ui","database","firebaseui","AuthUI","ggProviderUI","GoogleAuthProvider","FacebookAuthProvider","PROVIDER_ID","emailProviderUI","EmailAuthProvider","logout","firebaseService","signOut","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","uiShown","document","getElementById","style","display","signInFlow","signInOptions","provider","customParameters","prompt","AuthScreen","Tabs","TabPane","useEffect","start","textAlign","color","fontWeight","id","UploadFile","action","listType","defaultFileList","uid","name","status","url","thumbUrl","UploadOutlined","Typography","Title","Text","Option","Select","TaxPayple2","useState","taxBracket","setTaxBracket","incomeTax","setIncomeTax","expectedTax","setExpectedTax","level","fontSize","align","marginTop","border","span","height","background","padding","paddingTop","paddingBottom","borderRight","Intl","NumberFormat","format","paddingLeft","onFinish","values","taxRate","grossIncome","taxIcome","taxRateSNG","taxRateMFS","taxRateMFJ","taxRateHOH","taxBracketCalculator","labelCol","wrapperCol","size","layout","validateMessages","required","types","email","number","range","initialValues","Item","label","value","rules","type","min","defaultValue","width","formatter","replace","parser","htmlType","DashBoard","user","setUser","currentUser","operations","marginRight","displayName","onClick","tabBarExtraContent","tab","key","Upload","Routes","justify","path","Dashboard","App","setAuthenticated","loading","setLoading","onAuthStateChanged","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b52256e0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({component: Component, authenticated, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => authenticated === true\r\n                ? <Component {...props} />\r\n                : <Redirect to={{ pathname: '/auth', state:{ from: props.location }}} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PublicRoute = ({component: Component, authenticated, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => authenticated === false\r\n                ? <Component {...props} />\r\n                : <Redirect to='/dashboard' />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PublicRoute\r\n","import { notification } from \"antd\"\r\n\r\nnotification.config({\r\n    placement: 'topLeft',\r\n})\r\n\r\nconst notify = (message,type,setting) => {\r\n    notification[type]({\r\n        message,\r\n        ...setting\r\n    })\r\n}\r\n\r\nexport default notify","import firebase from 'firebase'\r\nimport * as firebaseui from 'firebaseui'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDx1rrXIAaWoJhzmiu0cyngoIrPxqgJG04\",\r\n    authDomain: \"fast-tax-17e1f.firebaseapp.com\",\r\n    databaseURL: \"https://fast-tax-17e1f.firebaseio.com\",\r\n    projectId: \"fast-tax-17e1f\",\r\n    storageBucket: \"fast-tax-17e1f.appspot.com\",\r\n    messagingSenderId: \"840556204908\",\r\n    appId: \"1:840556204908:web:d32c6d07bcbfa11fd41949\",\r\n    measurementId: \"G-G3G0CEWBH0\"\r\n}\r\nfirebase.initializeApp(firebaseConfig)\r\nexport const auth = firebase.auth()\r\nexport const db = firebase.database()\r\nexport const ui = new firebaseui.auth.AuthUI(auth)\r\nexport const ggProvider = new firebase.auth.GoogleAuthProvider()\r\nexport const fbProvider = new firebase.auth.FacebookAuthProvider()\r\nexport const ggProviderUI = firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\nexport const fbProviderUI = firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\nexport const emailProviderUI = firebase.auth.EmailAuthProvider","import * as firebaseService from \"../services/firebase\"\r\n\r\nexport const login = async (email, password) => {\r\n    try {\r\n        const response =  await firebaseService.auth.signInWithEmailAndPassword(email, password)\r\n        return response\r\n    } catch (error) {\r\n        return error.message\r\n    }\r\n}\r\nexport const register = async (email, password) => {\r\n    try {\r\n        const response =  await firebaseService.auth.createUserWithEmailAndPassword(email, password)\r\n        return response\r\n    } catch (error) {\r\n        return error.message  \r\n    }\r\n}\r\nexport const loginWithGoogle = async () => {\r\n    const provider = firebaseService.ggProvider.addScope('profile');\r\n    return await firebaseService.auth.signInWithPopup(provider).then((result) => {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        // ...\r\n        return result\r\n        }).catch((error) => {\r\n            return error.message\r\n        });\r\n\r\n}\r\nexport const loginWithFaceBook = async () => {\r\n    return await firebaseService.auth.signInWithPopup(firebaseService.fbProvider).then((result) => {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        // ...\r\n        return result\r\n        }).catch((error) => {\r\n            return error.message\r\n        });\r\n}\r\n\r\nexport const logout = () => {\r\n    return firebaseService.auth.signOut()\r\n}\r\n\r\nexport const getCurrentUser = () => {\r\n    return firebaseService.auth.currentUser\r\n}\r\n\r\n// Firebase Ui Authentication\r\nvar uiConfig = {\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: function(authResult, redirectUrl) {\r\n        // User successfully signed in.\r\n        // Return type determines whether we continue the redirect automatically\r\n        // or whether we leave that to developer to handle.\r\n        return true;\r\n      },\r\n      uiShown: function() {\r\n        // The widget is rendered.\r\n        // Hide the loader.\r\n        document.getElementById('loader').style.display = 'none';\r\n      }\r\n    },\r\n    // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\r\n    signInFlow: 'popup',\r\n    // signInSuccessUrl: '<url-to-redirect-to-on-success>',\r\n    signInOptions: [\r\n        {\r\n            provider: firebaseService.ggProviderUI,\r\n            customParameters: {\r\n              // Forces account selection even when one account\r\n              // is available.\r\n              prompt: 'select_account'\r\n            }\r\n          },\r\n          {\r\n            provider: firebaseService.emailProviderUI.PROVIDER_ID,\r\n          }\r\n    ],\r\n    // Terms of service url.\r\n    // tosUrl: '<your-tos-url>',\r\n    // Privacy policy url.\r\n    // privacyPolicyUrl: '<your-privacy-policy-url>'\r\n  };\r\n\r\nexport const uiStart = () => {\r\n    firebaseService.ui.start('#firebaseUI-auth-container', uiConfig)\r\n}\r\n\r\n// Chat\r\nexport const writeMessage = async (content, user) => {\r\n  try {\r\n    await firebaseService.db.ref('chats').push({\r\n        content,\r\n        timestamp: Date.now(),\r\n        user: {\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          photoURL: user.photoURL\r\n        }\r\n      })\r\n    return {success: true, error: null}\r\n  } catch (error) {\r\n    return {success: false, error: error.message}\r\n  }\r\n}\r\n\r\nexport const readMessage = (callback) => {\r\n  if(firebaseService.db && firebaseService.db.ref('chats') )\r\n  {\r\n    firebaseService.db.ref('chats').on('value', snapshot => {\r\n      snapshot.val() && callback(Object.values(snapshot.val()))\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n  firebaseService.db.ref('chats').remove()\r\n}","\r\nimport React, { useEffect } from 'react'\r\nimport { Tabs } from 'antd'\r\nimport Login from '../components/Login'\r\nimport Register from '../components/Register'\r\nimport { login, register, loginWithGoogle, loginWithFaceBook, uiStart } from  '../helpers/auth'\r\n\r\nconst {TabPane} = Tabs\r\n\r\nconst AuthScreen = () => {\r\n\r\n    useEffect(() => {\r\n        uiStart()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h1 style={{textAlign: 'center'}}>Welcome to - <span style={{color: '#1890ff', fontWeight:'bold'}}>Fast Tax</span></h1>\r\n            <div id=\"firebaseUI-auth-container\"></div>\r\n            <div id=\"loader\">Loading...</div>\r\n        </>\r\n        // <Tabs defaultActiveKey=\"1\">\r\n        //     <TabPane tab=\"Login\" key=\"1\">\r\n        //         <Login onSubmit={login} loginWithGoogle={loginWithGoogle} loginWithFaceBook={loginWithFaceBook}/>\r\n        //     </TabPane>\r\n        //     <TabPane tab=\"Register\" key=\"2\">\r\n        //         <Register onSubmit={register}/>\r\n        //     </TabPane>\r\n        // </Tabs>\r\n    )\r\n}\r\n\r\nexport default AuthScreen\r\n\r\n","import React from 'react'\r\nimport { Upload, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nconst UploadFile = () => {\r\n\r\n    const fileList = [\r\n        {\r\n            uid: '-1',\r\n            name: 'xxx.png',\r\n            status: 'done',\r\n            url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n            thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n        },\r\n    ];\r\n\r\n    const props = {\r\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        listType: 'picture',\r\n        defaultFileList: [...fileList],\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Upload {...props}>\r\n            <Button>\r\n                <UploadOutlined /> Upload\r\n            </Button>\r\n        </Upload>\r\n    )\r\n}\r\n\r\nexport default UploadFile\r\n","import React, {useState} from 'react'\r\nimport { Form, Input, Tooltip, Button, InputNumber, Switch, Typography, Divider } from 'antd';\r\nconst { Title } = Typography\r\n\r\nconst TaxPayple = () => {\r\n  const [taxPayple, setTaxPayple] = useState(0);\r\n  const [taxReturn, settaxReturn] = useState(0)\r\n\r\n  const onFinish = values => {\r\n    const taxRate = getTaxRate(values.grossIncome, values.maried)\r\n    const taxPayple = values.grossIncome*(taxRate/100)\r\n    const taxReturn = (values.grossIncome - (taxPayple))*0.05\r\n    setTaxPayple(taxPayple.toFixed(2))\r\n    settaxReturn(taxReturn.toFixed(2))\r\n  };\r\n\r\n  const validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n      email: '${label} is not validate email!',\r\n      number: '${label} is not a validate number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n  };\r\n\r\n  const getTaxRate = (grossIncome, isMaried) => {\r\n    console.log('======== Bao Minh: getTaxRate -> grossIncome', grossIncome)\r\n    if(grossIncome <= 9700) {\r\n      return 10\r\n    } else if ( grossIncome <= 39475) {\r\n      return 12\r\n    } else if ( grossIncome <= 84200) {\r\n      return 22\r\n    } else {\r\n      return 24\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form name=\"complex-form\" onFinish={onFinish} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }} size='large'\r\n        validateMessages={validateMessages}\r\n        initialValues={{\r\n          grossIncome: 1000,\r\n          maried: false\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"grossIncome\"\r\n          label=\"Gross Income\"\r\n          rules={[{ type: 'number', min: 0, defaultValue: 1000 }]}\r\n        >\r\n          <InputNumber\r\n            style={{width: \"70%\"}}\r\n            min={0}\r\n            formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"maried\"\r\n          label=\"Are you married ?\"\r\n        >\r\n          <Switch />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\" \" colon={false}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Calculate\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <div>\r\n        <Divider />\r\n        <Title level={4}>Total Tax Payple: ${taxPayple}</Title>\r\n        <Title level={4}>Expected Tax Return: ${taxReturn}</Title>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaxPayple\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Typography, Row, Col, Form, Button, InputNumber, Switch, Select, Divider } from 'antd'\r\nconst { Title, Text } = Typography\r\nconst { Option } = Select;\r\n\r\nconst TaxPayple2 = () => {\r\n  const [taxBracket, setTaxBracket] = useState(0)\r\n  const [incomeTax, setIncomeTax] = useState(0)\r\n  const [expectedTax, setExpectedTax] = useState(0)\r\n\r\n  const validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n      email: '${label} is not validate email!',\r\n      number: '${label} is not a validate number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n  };\r\n\r\n  // (max10)*10% + (max 12- max 10) * 12% + (max 22-max 12) * 22% + ((100,000 - A) - max 22) * 24%\r\n\r\n  const taxRateSNG = (grossIncome) => {\r\n    let taxIcome = 0\r\n    let taxRate = 0\r\n    if (grossIncome > 0) {\r\n      taxIcome += (9700 * 0.1)\r\n      taxRate = 10\r\n    } \r\n    if (grossIncome > 9700) {\r\n      taxIcome += ((39475 - 9700)*0.12)\r\n      taxRate = 12\r\n    } \r\n    if (grossIncome > 39475) {\r\n      taxIcome += ((84200 - 39475)*0.22)\r\n      taxRate = 22\r\n    } \r\n    if (grossIncome > 84200) {\r\n      taxIcome += ((160725 - 84200)*0.24)\r\n      taxRate = 24\r\n    } \r\n    if (grossIncome > 160725) {\r\n      taxIcome += ((204100 - 160725)*0.32)\r\n      taxRate = 32\r\n    } \r\n    if (grossIncome > 204100) {\r\n      taxIcome += ((510300 - 204100)*0.35)\r\n      taxRate = 35\r\n    } \r\n    if (grossIncome > 510300 ){\r\n      taxIcome += ((grossIncome - 510300)*0.37)\r\n      taxRate = 37\r\n    }\r\n    return {\r\n      taxRate, taxIcome\r\n    }\r\n  }\r\n  const taxRateMFJ = (grossIncome) => {\r\n    let taxIcome = 0\r\n    let taxRate = 0\r\n    if (grossIncome > 0) {\r\n      taxIcome += (19400 * 0.1)\r\n      taxRate = 10\r\n    } \r\n    if (grossIncome > 19400) {\r\n      taxIcome += ((78950 - 19400)*0.12)\r\n      taxRate = 12\r\n    } \r\n    if (grossIncome > 78950) {\r\n      taxIcome += ((168400 - 78950)*0.22)\r\n      taxRate = 22\r\n    } \r\n    if (grossIncome > 168400) {\r\n      taxIcome += ((321450 - 168400)*0.24)\r\n      taxRate = 24\r\n    } \r\n    if (grossIncome > 321450) {\r\n      taxIcome += ((408200 - 321450)*0.32)\r\n      taxRate = 32\r\n    } \r\n    if (grossIncome > 408200) {\r\n      taxIcome += ((615350 - 408200)*0.35)\r\n      taxRate = 35\r\n    } \r\n    if (grossIncome > 615350 ){\r\n      taxIcome += ((grossIncome - 615350)*0.37)\r\n      taxRate = 37\r\n    }\r\n    return {\r\n      taxRate, taxIcome\r\n    }\r\n  }\r\n  const taxRateMFS = (grossIncome) => {\r\n    let taxIcome = 0\r\n    let taxRate = 0\r\n    if (grossIncome > 0) {\r\n      taxIcome += (9700 * 0.1)\r\n      taxRate = 10\r\n    } \r\n    if (grossIncome > 9700) {\r\n      taxIcome += ((39475 - 9700)*0.12)\r\n      taxRate = 12\r\n    } \r\n    if (grossIncome > 39475) {\r\n      taxIcome += ((84200 - 39475)*0.22)\r\n      taxRate = 22\r\n    } \r\n    if (grossIncome > 84200) {\r\n      taxIcome += ((160725 - 84200)*0.24)\r\n      taxRate = 24\r\n    } \r\n    if (grossIncome > 160725) {\r\n      taxIcome += ((204100 - 160725)*0.32)\r\n      taxRate = 32\r\n    } \r\n    if (grossIncome > 204100) {\r\n      taxIcome += ((306175 - 204100)*0.35)\r\n      taxRate = 35\r\n    } \r\n    if (grossIncome > 306175 ){\r\n      taxIcome += ((grossIncome - 306175)*0.37)\r\n      taxRate = 37\r\n    }\r\n    return {\r\n      taxRate, taxIcome\r\n    }\r\n  }\r\n  const taxRateHOH = (grossIncome) => {\r\n    let taxIcome = 0\r\n    let taxRate = 0\r\n    if (grossIncome > 0) {\r\n      taxIcome += (13850 * 0.1)\r\n      taxRate = 10\r\n    } \r\n    if (grossIncome > 13850) {\r\n      taxIcome += ((52850 - 13850)*0.12)\r\n      taxRate = 12\r\n    } \r\n    if (grossIncome > 52850) {\r\n      taxIcome += ((84200 - 52850)*0.22)\r\n      taxRate = 22\r\n    } \r\n    if (grossIncome > 84200) {\r\n      taxIcome += ((160700 - 84200)*0.24)\r\n      taxRate = 24\r\n    } \r\n    if (grossIncome > 160700) {\r\n      taxIcome += ((204100 - 160700)*0.32)\r\n      taxRate = 32\r\n    } \r\n    if (grossIncome > 204100) {\r\n      taxIcome += ((510300 - 204100)*0.35)\r\n      taxRate = 35\r\n    } \r\n    if (grossIncome > 510300 ){\r\n      taxIcome += ((grossIncome - 510300)*0.37)\r\n      taxRate = 37\r\n    }\r\n    return {\r\n      taxRate, taxIcome\r\n    }\r\n  }\r\n  const taxBracketCalculator = (status, grossIncome) => {\r\n    switch (status) {\r\n      case 'SNG':\r\n        return taxRateSNG(grossIncome)\r\n      case 'MFS':\r\n        return taxRateMFS(grossIncome)\r\n      case 'MFJ':\r\n        return taxRateMFJ(grossIncome)\r\n      case 'HOH':\r\n        return taxRateHOH(grossIncome)\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  const onFinish = values => {\r\n    const taxRate = taxBracketCalculator(values.status, values.grossIncome)\r\n    setTaxBracket(taxRate.taxRate)\r\n    setIncomeTax(taxRate.taxIcome)\r\n    const expectedTax = (values.grossIncome - taxRate.taxIcome)*0.05\r\n    setExpectedTax(expectedTax)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title level={3}>Tax Bracket Calculator</Title>\r\n      <Text style={{ fontSize: 16 }}>\r\n        Taxact's free tax bracket calculator is a simple, easy way to estimate your federal\r\n        income tax bracket and total tax.\r\n      </Text>\r\n      <Row align='middle' style={{ marginTop: 20 , border: '1px solid'}}>\r\n        <Col span={8} style={{ height: 400, background: '#f6f5fb', padding: 25, paddingTop: 50, paddingBottom: 35, borderRight: '1px solid' }}>\r\n          <Title level={4} style={{ textAlign: 'center' }}>Your 2020 Income Tax Bracket</Title><br />\r\n          <Text>Tax Bracket:</Text><br />\r\n          <Title level={4}>{taxBracket}%</Title>\r\n          <Text>Income Tax:</Text><br />\r\n          <Title level={4}>${new Intl.NumberFormat('en').format(incomeTax)}</Title>\r\n          <Text>Expected Tax Return:</Text><br />\r\n          <Title level={4}>${new Intl.NumberFormat('en').format(expectedTax)}</Title>\r\n        </Col>\r\n        <Col span={16} style={{ padding: 40, paddingLeft: 30}}>\r\n          <Form\r\n            onFinish={onFinish}\r\n            name=\"complex-form\"\r\n            labelCol={{ span: 8 }}\r\n            wrapperCol={{ span: 16 }}\r\n            size='large'\r\n            layout='vertical'\r\n            validateMessages={validateMessages}\r\n            initialValues={{\r\n              grossIncome: 1000,\r\n              status: 'SNG'\r\n            }}\r\n          >\r\n            <Form.Item\r\n              name=\"status\"\r\n              label=\"Filing Status\"\r\n            >\r\n              <Select>\r\n                <Option value=\"SNG\">Single</Option>\r\n                <Option value=\"MFS\">Married Filing Separately</Option>\r\n                <Option value=\"MFJ\">Married Filing Joint</Option>\r\n                <Option value=\"HOH\">Head of Household</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"grossIncome\"\r\n              label=\"Total Expected Gross Income For 2020\"\r\n              rules={[{ type: 'number', min: 0, defaultValue: 1000 }]}\r\n            >\r\n              <InputNumber\r\n                style={{ width: \"70%\" }}\r\n                min={0}\r\n                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n              />\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Calculate\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaxPayple2\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { Tabs, Button, Typography } from 'antd';\r\nimport { logout, getCurrentUser} from '../helpers/auth'\r\nimport UploadFile from '../components/Upload';\r\nimport TaxPayple from '../components/TaxPayple';\r\nimport TaxPayple2 from '../components/TaxPayple2';\r\nconst { TabPane } = Tabs;\r\nconst { Title } = Typography\r\n\r\nconst DashBoard = () => {\r\n  const [user, setUser] = useState({})\r\n\r\n  useEffect(() => {\r\n    setUser(getCurrentUser());\r\n  }, [])\r\n\r\n  const operations = (\r\n    <Fragment>\r\n      <Title level={4} style={{marginRight: 10 }}>Hi, {user.displayName}</Title>\r\n      <Button onClick={logout}>Logout</Button>\r\n    </Fragment>\r\n  )\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Title level={1} style={{ textAlign: 'center'}}>FAST <span style={{color: '#1890ff'}}>TAX</span></Title>\r\n      <Tabs tabBarExtraContent={operations}>\r\n        <TabPane tab=\"Tax Payple\" key=\"1\">\r\n          {/* <TaxPayple /> */}\r\n          <TaxPayple2 />\r\n        </TabPane>\r\n        <TabPane tab=\"Upload file\" key=\"2\">\r\n          <UploadFile />\r\n        </TabPane>\r\n      </Tabs>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default DashBoard\r\n","import React from 'react'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport PublicRoute from './PublicRoute'\r\nimport { Switch } from 'react-router-dom'\r\nimport AuthScreen from '../../pages/AuthScreen'\r\nimport Dashboard from '../../pages/Dashboard'\r\nimport { Col, Row } from 'antd'\r\n\r\nconst Routes = ({authenticated}) => {\r\n    return (\r\n        <Row justify=\"center\" align=\"middle\">\r\n            <Col span={20}>\r\n                <Switch>\r\n                    <PrivateRoute path=\"/dashboard\" authenticated={authenticated} component={Dashboard}></PrivateRoute>\r\n                    <PublicRoute authenticated={authenticated} component={AuthScreen}></PublicRoute>\r\n                </Switch>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport Routes from './components/hocs/routes';\nimport { auth } from './services/firebase';\n\n\nconst App = () => {\n\n    const [authenticated, setAuthenticated] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n      setLoading(true)\n      auth.onAuthStateChanged(user => {\n        if(user) {\n          setAuthenticated(true)\n        } else { setAuthenticated(false) }\n      })\n      setLoading(false)\n    }, [])\n      \n    if(loading) {\n      return (\n        <h1>Loading ...</h1>\n      )\n    }\n\n    return (\n      <div>\n        <BrowserRouter>\n          <Routes authenticated={authenticated}/>\n        </BrowserRouter>\n      </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport './assets/scss/style.scss'\nimport App from './App';\nimport 'firebaseui/dist/firebaseui.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}